{#
/**
 * Sentry plugin for Craft CMS 3.x
 *
 * Sentry Settings.twig
 *
 * @author    Luke Youell
 * @copyright Copyright (c) 2017 Luke Youell
 * @link      https://github.com/lukeyouell
 * @package   Sentry
 * @since     1.0.0
 */
#}

{% redirect 'settings/sentry/authentication' %}

{% import "_includes/forms" as forms %}

{% do view.registerAssetBundle("lukeyouell\\sentry\\assetbundles\\SentryAsset") %}

{% set projects = settings.authToken ? craft.Sentry.listProjects() : false %}
{% set keys = settings.project ? craft.Sentry.listKeys(settings.project) : false %}
{% set projectOptions = [] %}
{% set keyOptions = [] %}

{% for project in projects %}
  {% set projectOptions = (project.status is defined) and (project.status == 'active') ? projectOptions|merge([{'value' : project.organization.slug ~ '/' ~ project.slug, 'label' : project.name}]) %}
{% endfor %}

{% for key in keys %}
  {% set keyOptions = (key.isActive is defined) and (key.isActive) ? keyOptions|merge([{'value' : key.dsn.secret, 'label' : key.name}]) %}
{% endfor %}

{% macro configWarning(setting) -%}
  {% set setting = '<code>' ~ setting ~ '</code>' %}
  {{ 'This is being overridden by the {setting} config setting in your {file} config file.'|t('sentry', {
      setting: setting,
      file:    'sentry.php'
  })|raw }}
{%- endmacro %}

{% from _self import configWarning %}

{{ forms.textField({
    first:        true,
    label:        'Authentication Token',
    required:     true,
    instructions: 'Authentication tokens allow you to perform actions against the Sentry API on behalf of your account.',
    id:           'authToken',
    name:         'authToken',
    placeholder:  'ScpkLqWe5VDSSYXDsHVEMj3j1KRCyZUjScpkLqWe5VDSSYXDsHVEMj3j1KRCyZUj',
    value:        settings.authToken,
    disabled:     'authToken' in overrides,
    warning:      'authToken' in overrides ? configWarning('authToken')
}) }}

{% if 'authToken' not in overrides %}
  <a class="btn" href="https://sentry.io/api/" target="_blank">Get Authentication Token</a>
{% endif %}

<hr>

{% set projectInput %}

  <div class="flex">

    {{ forms.select({
        name:     'project',
        id:       'project',
        options:  projectOptions,
        value:    settings.project,
        disabled: 'project' in overrides
    }) }}

    {% if 'project' not in overrides %}
      <div class="btn" id="projectBtn">{{ 'Refresh'|t }}</div>
      <div class="spinner hidden" id="projectSpinner"></div>
    {% endif %}

  </div>

{% endset %}

{{ forms.field({
    label:   'Project'|t,
    warning: 'project' in overrides ? configWarning('project')
}, projectInput) }}

{% set keyInput %}

  <!--email_off-->

  <div class="flex">
    {{ forms.select({
        name:     'clientDsn',
        id:       'clientDsn',
        options:  keyOptions,
        value:    settings.clientDsn,
        disabled: 'clientDsn' in overrides
      })
    }}

    {% if 'clientDsn' not in overrides %}
      <div class="spinner hidden" id="keySpinner"></div>
    {% endif %}

  </div>

  <!--/email_off-->

{% endset %}

{{ forms.field({
    label:   'Client DSN'|t,
    warning: 'clientDsn' in overrides ? configWarning('clientDsn')
}, keyInput) }}

<hr>

{{ forms.textField({
    label:        'Excluded HTTP Error Codes',
    instructions: 'Comma separated list of HTTP error codes that should not be sent to Sentry.',
    id:           'excludedCodes',
    name:         'excludedCodes',
    placeholder:  '400, 404, 429',
    value:        settings.excludedCodes,
    disabled:     'excludedCodes' in overrides,
    warning:      'excludedCodes' in overrides ? configWarning('excludedCodes')
}) }}
